import math

def test():
    for i in range(3):
        for j in range(3):
            if i+j<=4:
                print(i,j)
                return(i,j)
test()
'''
l = 'DDUUDDUDUUUD'
sl = 0
temp = 0
count = 0
for i in l:
    if i=='D':
        sl-=1
    else:
        sl+=1
    print(sl)
    if temp+sl in {-1,0}:
        count+=1
    temp = sl
print(count//2)
'''

# sc = ['_']
# print(sc)
# for i in range(len(l)):
#     if l[i]=='D':
#         # print(' '*i+'\\')
#         sc.append(' '*i+"\\")
# print(*sc,sep='\n')










'''
# s1 = sorted(list(map(int,'2 4'.split())))
# s2= sorted(list(map(int,'16 32 96'.split())))
# s1 = sorted(list(map(int,'3 4'.split())))
# s2= sorted(list(map(int,'24 48'.split())))
s1 = sorted(list(map(int,'2'.split())))
s2= sorted(list(map(int,'20 30 12'.split())))

def gcd_(ar):
    sar = sorted(ar)
    g = ar[0]
    for i in ar[::-1]:
        g = math.gcd(i,g)
    return g

def lcm(ar):
    l = ar[0]
    for i in ar[1:]:
        l = (i*l)//math.gcd(i,l)
    return l

l = lcm(s1)
g = gcd_(s2)
print(len([1 for i in range(l,g+1,l) if g%i==0]))
'''



# num1 = 2
# num2 = 4
# num3 = 8 

# print("The L.C.M. is", lcm(num1, num2))



# sock = sorted(list(map(int,'10 20 20 10 10 30 50 10 20'.split())))
# count= i = 0
# while i<len(sock):
#     if sock[i]==sock[i-1]:
#         count+=1
#         i+=1
#     i+=1
# print(sock)
# print(count)







# string = 'eoeoeoeoeoeoeoeoeoeoe'
# print(string[::2],string[1::2],sep=' ')

# def factorial(n):
#   if n==1:
#       return 1
#   else:
#       return n*factorial(n-1)
# print(factorial(5))

'''
from html.parser import HTMLParser
# create a subclass and override the handler methods
class MyHTMLParser(HTMLParser):
    def handle_starttag(self, tag, attrs):        
        print ('Start :',tag)
        for ele in attrs:
            print ('->',ele[0],'>',ele[1])
            
    def handle_endtag(self, tag):
        print ('End   :',tag)
        
    def handle_startendtag(self, tag, attrs):
        print ('Empty :',tag)
        for ele in attrs:
            print ('->',ele[0],'>',ele[1])

# instantiate the parser and fed it some HTML
parser = MyHTMLParser()
# parser.feed("<html><head><title>HTML Parser - I</title></head>"
            # +"<body><h1>HackerRank</h1><br /></body></html>")
parser.feed("<html><head><title>HTML Parser - I</title></head>"
            +"<body data-modal-target class='1'><h1>HackerRank</h1><br /></body></html>")
'''
#import re

# cardTest='''
# 4123456789123456
# 5123-4567-8912-3456
# 61234-567-8912-3456
# 4123356789123456
# 5133-3367-8912-3456
# 5123 - 3567 - 8912 - 3456
# '''
#print(re.findall(r'([456][0-9]{15}|[456][0-9]{3}[-][0-9]{4}[-][0-9]{4}[-][0-9]{4})',cardTest))
#print(re.findall(r'(\d)(?=\d\1)',cardTest))

# cardTest='..12345678910111213141516171820212223'
# print(re.findall(r'(\d)\1+',cardTest)[0])

# cardTest='rabcdeefgyYhFjkIoomnpOeorteeeee'
# print(re.findall(r'[\w]([AEIOUaeiou]{2,})[\w*]',cardTest))

# test = '3 2 1 3'
# arr = list(map(int,test.split()))
# print(arr)
# from collections import Counter
# print(Counter(arr)[max(arr)])

'''
#test = '07:05:45PM'
test = '12:40:22AM'

def timeConversion(s):
    if s[-2:]=='AM':
        temp = s[:-2].split(':')
        if temp[0] == '12':
            temp[0]='00'
            temp = ':'.join(temp)
            return temp
        else:
            return s[:-2]
    else:
        temp = s[:-2].split(':')
        temp[0]=str(int(temp[0])+12)
        temp = ':'.join(temp)
        return temp

print(timeConversion(test))
'''

'''
#test = '277 888 417 136 1979 1360 1711 569 649 1693 763 1586 259 1715 892 1366 309 170 1072 992 1483 1245 5 1421 1066 1466 368 109 774 1716 89 630 154 68 749 1857 1699 68 539 1467 69 531 888 1046 1364 1700 827 181 44 1470 145 1859 1819 1245 618 957 737 1232 394 435 1447 729 1209 1291 117 1824 1939 1646 1242 1936 1145 1369 1799 1593 1583 142 660 156 1084 1776 1866 482 1229 1722 1848 838 1809 1241 559 342 830 173 1910 1158 251 829 422 268 148 1616 1998 949 1770 1284 1760 1135 608 1722 1506 685 1359 1992 95 1927 882 470 1060 71 1099 354 851 124 1100 348 1187 1467 1775 378 237 1193 1903 1685 785 1378 1261 362 463 389 1420 59 95 1510 628 1099 89 315 611 118 494 1632 663 1366 1389 1555 965 1183 1294 328 262 1012 1099 182 1908 1167 98 1015 370 1693 661 956 1649 784 281 1911 1740 379 1962 1504 61 154 1654 1841 245 1383 1278 1194 888 102 552 493 1758 442 127 866 1204 989 1057 1637 1353 860 896 531 433 1209 1314 753 86 1240 625 1365 66 1506 732 1435 1205 1653 1764 241 1813 1121 1872 1627 313 396 1385 992 1534 1344 1503 587 1298 1976 1298 715 540 1222 1593 675 290 1040 879 426 560 718 1137 573 360 414 1537 1944 413 801 1238 33 1831 779 1066 781 1890 454 1258 1753 1502 1871 602 1810 1952 776 847 1197 1600 1349 946 1616 554 1823 612 1655 381 52 1988 1264 1598 1236 1659 271 1398 1766 849 91 544 977 948 1055 1964 323 664 1722 79 1886 1874 431 1537 246 748 1734 93 1636 501 73 1508 1526 14 1144 1194 1004 77 1365 1784 1325 1918 57 40 1280 1261 1741 717 1459 445 1666 1800 1720 420 298 1731 115 700 156 1851 461 1924 324 574 852 573 1536 1329 409 1070 116 268 1360 1857 791 667 563 979 484 191 1920 984 666 11 1862 580 92 329 1084 1763 514 210 603 962 1350 745 1663 1635 1400 1761 937 733 411 146 1328 1658 965 312 155 504 1411 276 1768 633 643 1049 649 1986 1672 400 1202 511 505 741 1548 798 1698 775 1893 815 1697 60 910 1323 458 1706 1243 138 772 911 1943 1147 810 1643 877 544 1963 1825 672 479 267 1738 1876 1170 1920 977 722 504 1669 823 72 1378 954 897 1223 1047 530 1269 1124 384 563 417 807 204 1802 996 1230 989 1476 867 1291 378 1190 1957 66 75 1543 1288 1741 128 1937 1658 392 107 1667 592 100 1905 273 178 8 1036 354 765 11 1644 1793 768 1676 129 1582 1967 1483 1139 714 451 1005 747 1982 904 1659 103 1508 574 1347 841 220 713 278 249 233 737 1832 127 802 371 116 810 1009 1341 1493 811 1351 870 1662 1402 1062 916 179 688 1718 4 46 508 449 1141 1739 223 1590 205 1772 799 745 1971 1557 919 482 931 577 1238 1514 782 555 220 1745 407 1046 1952 1691 1254 1318 1068 1966 1609 1445 831 181 1294 1151 1482 64 1147 1766 324 1634 151 958 150 290 1693 1730 256 570 1504 1518 1122 171 1282 1570 1604 1623 1787 1157 398 582 1737 368 1472 402 314 1663 28 1578 1411 1172 1575 770 1132 4 1068 594 370 87 1224 1203 164 668 1375 1957 1479 1315 1110 1948 658 961 263 1358 1346 80 736 1814 87 684 1364 1285 1158 711 696 1035 741 1477 1415 1458 1809 1521 1023 36 1243 1559 50 656 727 1015 694 1337 140 1865 1237 103 983 1603 814 1652 1495 1108 466 239 482 1709 168 189 1055 1443 1001 979 730 1455 388 1389 1956 1661 427 459 416 1472 1205 1406 1255 1805 266 287 1653 1211 122 249 1482 681 422 298 249 1016 901 1462 428 1181 529 1028 942 1937 1527 559 319 1921 1995 1782 532 1053 1713 1244 1845 1165 1973 280 1086 263 1604 1639 1454 1003 465 1301 842 568 385 1896 1659 451 543 1669 1340 471 825 1480 445 336 1713 1585 131 831 1228 514 661 1273 1015 1090 432 8 1981 364 917 872 1762 1281 1910 1563 811 130 1596 1542 1988 1015 148 194 1657 1642 749 1116 1741 1356 875 1365 390 704 648 1410 1278 299 910 733 772 251 317 530 313 1996 1147 851 1124 772 912 1077 1326 1208 806 817 215 421 399 1059 1887 1656 830 1774 1069 806 1980 1143 460 1077 549 1782 105 321 585 744 870 632 475 1679 395 1966 1973 832 1711 1642 1634 1060 1235 311 467 1688 536 516 299 1149 547 149 547 1688 960 703 1175 1123 1740 112 134 906 1690 1844 1094 1007 543 1041 1501 1799 999 396 985 587 445 562 810 1880 1350 625 259 1887 311 27 620 1669 1691 1674 514 436 894 534 1254 553 804 721 778 324 1363 348 55 1643 532 879 1642 199 614 709 130 1621 411 1389 340 1174 698 778 631 1711 1995 772 1417 778 478 1237 296 244 1828 237 729 1021 756 495 788 203 312 1106 629 71 989 160 541 1037 1607 394 288 49 922 434 757 1749 562 1983 1721 1172 1052 1837 332 427 187 954 1282 330 36 1226 195 903 466 53 779 1163 1010 436 1323 659 1640 439 54 832 1945 929 341 1191 687 874 308 114 1336 1100 1138 1326 935 1367 309 1259 146 942 980 1727 1826 1128 843 867 502 1135 1594 516 272 436 518 1475 1174 729 599 1462 1954 533 1352 613 451 1124 1787 1309 602 37 1506 1 1438 714 1687 884 152 1771 1349 448 152 451 1756 146 494 178 1889 1067 1569 1545 1979 720 1532 1473 424 1419 1500 1124 1910 1689 979 530 1546 298 360 1214 1996 1780 1189 831 1081 592 1832 1616 1712 44 1986 1295 1430 23 1595 481 1282 1783 732 1869 1425 1430 595 477 1555 1361 1091 1488 252 1976 689 363 980 177 424 1555 935 1782 918 1924 1430 1218 1757 1901 165 1687 1475 850 1515 1499 738 873 101 294 745 1933 514 1861 1289 1791 456 1115 904 463 1214 1499 1553 1255 1872 463 1987 161 1359 20 686 1356 574 1355 1609 1547 486 730 1982 309 226 841 1852 102 324 518 276 1725 47 801 749 1036 1962 144 193 636 227 1180 797 230 602 771 1845 1994 1426 180 1261 1996 1571 262 881 1282 1259 657 958 1047 136 595 455 60 911 44 1825 1842 169 1858 279 1088 1504 1246 1382 1283 1383 1630 1026 1113 1951 1713 1632 1013 1107 1230 1354 351 1437 1293 1758 81 1998 972 799 762 1770 1787 146 863 377 784 1571 117 648 852 1518 1993 1190 1429 1638 1864 1351 1554 993 87 1429 1010 953 1116 42 589 125 1122 38 1057 398 250 671 382 626 261 380 1563 1477 1626 1690 1727 1987 166 503 88 1743 327 538 1256 416 1649 1801 1138 398 1097 1232 498 169 1900 1777 18 1091 1545 655 1014 33 1635 1282 1553 381 432 550 1101 247 1164 747 1304 431 1671 246 1233 1549 979 1199 703 122 359 514 522 1620 1774 638 800 1310 473 1032 402 557 681 297 996 988 22 1532 704 1849 1691 417 1828 1398 1223 1245 783 1225 237 1704 1624 1164 1845 973 1527 1613 1705 61 762 799 745 1468 1874 1832 1447 1187 1059 1809 60 1196 599 1225 705 938 812 1634 1623 1662 689 514 847 1171 237 1044 515 851 1816 1637 1675 927 320 631 1369 1499 486 113 46 1279 1374 1516 1810 727 1459 88 1648 724 464 133 1959 842 1672 955 586 1088 1039 1058 593 594 494 1946 694 1906 1651 1429 937 915 63 72 1917 1837 118 222 1832 1788 1138 1364 1271 897 961 846 807 847 1602 193 157 31 780 1463 1600 317 584 1822 1609 776 946 1241 954 1094 1259 29 1396 77 90 1446 831 379 1094 479 870 1280 1278 77 360 159 1761 997 1929 1761 6 290 638 1921 1078 1280 21 800 1197 1555 1835 1939 300 1569 1987 96 1050 1268 886 133 1134 745 1342 81 1543 1539 1449 1209 4 216 1900 1972 700 979 1902 1408 152 1553 1864 267 404 660 1388 1242 690 1075 1323 1653 1686 1048 141 457 139 768 1949 5 252 383 1451 349 1724 1001 1416 618 1471 842 1437 1352 1582 1935 1892 1063 1191 1435 1613 715 907 1139 779 540 927 290 245 855 171 582 1045 235 1662 1585 1676 236 88 313 156 163 382 792 1772 1788 1641 1052 1672 1286 1975 1336 959 1895 1513 1154 35 1990 1412 963 1340 1743 1520 1850 1974 387 1580 1945 190 1029 1943 38 840 77 585 1468 908 57 408 1687 1397 247 627 108 1441 1549 267 1342 500 1010 757 90 68 1569 1881 204 1678 381 358 1656 1968 1560 1340 18 125 554 32 1174 284 1633 283 1953 841 1547 603 1269 35 653 1777 1513 940 1504 1634 999 797 1886 1911 205 1919 1001 844 476 1314 741 1748 1084 938 73 755 886 1133 882 1203 728 1798 1536 1136 133 1077 1176 764 163 845 1120 1036 1627 69 1413 216 1036 1512 856 1055 280 1989 109 1841 581 479 779 259 445 1789 1103 1999 654 1819 1928 529 779 264 188 1515 1722 1814 66 961 948 654 310 1326 1017 1977 1161 254 953 1287 286 1762 843 60 526 1455 186 1406 613 478 1394 201 115 1790 696 715 635 430 1136 856 743 163 1156 1543 1650 120 1476 258 444 1193 1984 394 938 855 1248 1042 1332 1383 109 1215 1382 355 133 318 527 1783 1514 846 1204 133 1748 1554 14 162 1947 1280 40 774 253 1412 1250 224 430 126 545 192 1875 1023 668 75 534 1057 848 1931 1334 428 718 620 611 785 712 128 1782 499 1415 1260 1863 953 1592 1625 1061 334 570 388 354 1345 481 542 1156 1829 1831 908 630 1730 1782 616 1332 1634 223 846 1859 837 1237 1984 230 1998 1683 1395 1818 1763 1058 1664 1931 64 580 580 141 1221 892 1456 1364 436 1043 1689 1548 468 901 361 1618 801 258 780 1816 505 1885 500 1477 1952 32 294 435 1613 407 859 1807 139 1360 112 573 1449 1601 678 1954 394 1522 786 1240 310 1455 286 1581 23 903 1143 1908 445 704 1805 82 347 672 310 1410 855 1205 1818 1698 1710 1967 584 692 1229 593 2000 1278 1785 1651 632 1290 664 274 1800 439 486 415 1901 774 578 1964 1785 1677 750 1667 1697 776 1154 1102 702 531 617 879 1533 1969 1874 250 207 648 2000 534 89 3 11 1905 181 942 1117 1113 688 1278 454 1203 1434 759 57 1367 1897 563 1564 1826 502 1426 316 626 1646 756 151 942 1666 481 1680 1340 567 1618 1902 889 1527 1285 1581 1125 1375 556 1323 948 623 94 1468 1902 93 1269 263 223 578 1615 551 1736 1243 750 1292 972 41 1672 487 1252 994'
#test = '1559 737 1532 494 1785 836 515 250 1713 960 623 536 228 616 1943 893 1358 611 583 1170 475 123 847 1460 1374 1217 148 1445 1005 215 1886 1480 1282 324 376 104 92 1988 1972 50 348 278 1780 1318 1817 684 34 698 1644 126 665 1799 948 1303 1321 874 884 1718 327 676 1424 1151 1242 235 1604 536 1984 1799 813 108 7 1781 1645 1867 724 328 939 920 335 307 1505 442 1541 1040 1980 1563 453 124 1840 588 68 40 210 1679 1001 1114 1451 508 545 1066 1564 605 908 645 660 1169 62 510 572 1788 1535 1608 972 822 1532 1373 99 1624 659 1706 1906 354 43 528 385 1432 1706 1077 250 1824 1005 977 73 517 435 1010 34 1735 1746 392 1691 1209 161 441 893 514 604 350 1143 1133 196 1844 1707 1208 1516 685 879 729 1245 1468 1486 1716 1906 1676 1237 246 1533 682 1798 1566 241 534 1144 398 181 215 980 1070 103 804 602 1482 1591 1307 1386 223 728 253 108 642 338 1008 1385 1929 1987 316 1503 1279 1737 1887 1248 1572 425 1017 947 1483 1308 320 834 1675 1437 1678 1483 943 1276 174 96 278 1581 1170 726 563 1386 1168 905 366 1869 544 647 1361 391 1216 689 1483 1404 1904 797 273 1060 615 1238 616 444 684 90 1276 1667 957 1083 829 109 171 1455 989 1044 1100 624 563 1218 1784 653 1306 391 189 1351 1282 329 380 1893 446 1791 1289 592 741 646 238 744 1394 1133 840 1677 1140 1416 1433 886 254 752 1621 878 1992 32 1317 210 892 970 1527 1332 1610 609 1099 1595 1876 205 727 929 595 970 837 1651 1680 232 1248 885 540 668 554 1820 1496 1406 153 1025 1806 202 198 1749 614 895 1644 807 1601 1730 719 592 611 1356 450 1656 544 1992 640 701 582 918 644 755 1011 1211 608 1615 1611 943 26 395 1139 1565 1451 262 633 502 1390 1345 633 1630 711 1890 121 878 233 1205 1214 801 191 742 325 1255 228 1928 1579 980 1099 1185 1141 34 231 1867 681 1067 1076 133 131 48 1293 384 1458 645 1411 131 216 1938 621 360 1117 803 274 124 220 1033 608 403 420 312 265 97 1832 439 273 1202 1104 1842 1281 1315 1238 1867 1047 1654 1962 1589 1908 354 1999 88 508 1137 923 1600 474 1009 1563 270 921 1092 860 1573 636 1903 851 1118 1671 1694 1190 1717 947 431 1041 1689 1022 531 659 1856 1129 352 350 1280 280 65 698 424 1669 1028 1650 1173 1166 411 917 509 275 1116 1686 1976 697 1057 861 1601 281 169 821 169 769 1541 11 261 562 604 485 155 1280 23 777 1225 742 133 353 958 623 9 702 367 1118 1383 530 227 1575 1626 372 888 1075 1857 1184 124 1488 1310 1173 4 1935 1926 901 1336 564 1955 1736 133 874 21 1897 1386 1836 348 1863 859 1197 1984 102 658 1393 1034 156 152 578 1528 820 832 332 717 1022 205 944 494 1053 1543 1621 486 311 59 626 1171 329 1144 262 838 1553 1538 1489 791 1506 738 392 175 35 1700 484 205 1600 7 659 738 776 1393 1814 1668 525 1241 1026 1150 311 1467 1215 1823 1729 1208 1180 1671 1451 739 137 413 998 1364 1035 1563 651 1401 1739 576 1300 1744 695 1645 1538 271 464 809 533 413 1579 1181 1815 1686 1296 1129 866 90 1486 1981 1605 254 453 369 403 1513 1706 109 1491 1465 695 49 945 1660 1192 1151 1068 167 1807 988 822 1155 1824 883 103 1498 1206 657 1659 718 972 122 767 979 437 1603 1607 704 1077 582 555 1890 454 545 1350 490 692 295 1382 1770 1889 61 1407 1275 274 782 1704 1001 1343 1192 1948 1493 1927 973 137 211 1562 675 37 554 445 1572 676 919 186 1359 1475 1433 1309 245 1169 534 824 301 208 1397 1072 1216 1336 595 1661 557 501 478 1598 1126 1508 1932 931 1202 1210 469 1617 217 1517 1173 18 1179 168 1484 722 1913 1052 509 1059 906 234 1938 506 1864 1913 1318 671 64 838 1594 1953 1270 1903 785 368 862 1159 1107 1729 180 1350 254 1406 165 854 1456 1971 1908 1463 1422 434 1846 1707 1 1200 406 283 1300 630 1058 1136 695 288 1868 506 1999 1329 1914 621 371 1582 1062 1167 1313 446 302 796 567 1361 709 18 842 326 688 53 1826 1043 939 1212 412 1632 1218 1282 1767 1580 1864 998 1799 1095 499 1531 838 1078 989 1353 1150 627 1957 570 1360 139 76 1758 656 254 1977 967 374 1393 741 318 334 1695 576 92 521 1716 442 1330 890 769 1050 1858 1418 1163 1883 1939 485 1724 1466 1520 1499 1473 1978 1002 1887 1546 816 354 1179 140 1318 528 203 18 1260 543 1597 1608 1267 926 439 1247 1712 1424 1313 957 559 1901 599 1785 1837 1151 952 51 1901 102 634 1514 197 1317 531 788 110 482 977 42 1335 1593 84 281 1777 746 79 1906 1428 1207 410 1146 1770 1671 787 411 831 454 936 609 1975 562 558 126 1176 447 1838 775 11 1620 1074 1221 239 476 124 805 1094 1591 1936 1416 1479 1942 949 1540 154 226 361 433 1823 21 746 492 967 1439 1437 503 1977 1235 122 567 1215 1991 1710 325 646 1400 1351 1246 98 1987 1612 1587 935 1917 1427 1818 1617 1677 1497 1067 205 1660 366 515 1950 1804 86 1940 1289 30 1337 1475 1161 394 1603 841 1852 1435 69 1299 819 320 162 834 1686 1053 1555 396 1534 1368 1652 1785 442 1260 324 1190 138 1513 1849 1590 663 18 826 1372 1753 365 19 338 207 391 420 1717 1675 1342 1506 918 1875 453 1557 1402 114 1203 921 1371 164 1284 365 134 1677 326 790 1467 483 1774 253 1712 1072 1553 1469 1998 1729 1595 1014 1698 1177 907 1949 349 1487 517 1577 1093 1083 1151 1192 1746 1021 1588 360 834 1334 260 1630 1237 846 1202 242 1201 1020 613 209 1583 1 1383 954 1852 1053 793 1650 825 696 557 464 972 555 1994 1825 861 1220 1084 229 234 1126 50 240 67 1894 1246 394 238 479 888 112 468 623 1772 224 1938 1736 535 945 1290 1648 958 521 79 657 631 1557 524 714 1645 196 414 1756 1312 700 21 461 131 1492 1639 1928 909 312 653 780 520 441 677 25 837 794 1134 262 1846 1700 559 1325 1795 307 416 1485 118 550 1454 8 1903 1635 28 1570 1872 32 829 504 1345 395 187 1222 557 708 67 1504 1252 1662 1175 778 471 1873 970 1120 591 219 439 575 1351 970 1531 426 1117 675 679 230 853 831 223 846 1686 1033 205 799 891 1009 1214 573 1491 1051 1348 93 1569 97 1826 1625 1900 1645 1827 1775 608 720 772 1778 92 46 22 1752 1522 1567 573 1354 283 208 195 551 96 1040 1397 33 946 1124 1621 190 1666 947 1126 24 121 650 1508 1950 786 41 1609 657 1051 35 489 711 1368 802 1575 476 1760 2 701 252 158 1026 1897 858 353 278 1914 1197 1484 1655 1111 1005 1431 609 280 1082 1420 803 907 278 1259 595 880 1766 1926 248 606 1732 757 1166 1148 1744 196 1061 328 619 1232 1410 1380 842 1326 1821 1988 409 1636 1074 641 1781 942 1504 937 177 1354 925 636 1986 1020 495 737 1475 1643 1540 1951 1250 290 379 1188 1585 976 825 1602 1430 920 646 237 1627 1906 525 686 638 1336 1599 1555 354 586 304 1820 1565 1035 57 32 1816 209 1509 230 354 1145 164 1644 1133 1712 1210 1364 496 827 1809 994 1507 112 1091 511 1702 427 1665 1481 986 746 1055 1105 214 769 453 59 1491 1495 1071 577 129 1047 782 737 912 1616 1542 1354 1944 1270 1230 1027 1745 623 1859 837 1019 614 452 667 536 139 167 1897 973 1888 499 66 389 878 100 897 1054 222 267 1937 361 1057 1435 1045 1150 73 1981 1793 614 45 1117 462 1263 505 426 1306 1228 459 1002 598 1682 1432 1284 870 1965 1205 484 1205 1417 670 986 638 1032 66 683 1892 1043 1140 815 1963 1569 1612 209 1980 1729 868 1234 1061 86 1436 919 583 102 199 1926 214 1387 1756 1005 765 338 1637 1675 855 62 1651 1141 1111 1093 664 1042 1409 226 971 880 814 1778 1784 1021 1420 167 925 1102 892 1416 1599 859 1459 607 851 113 617 1689 1205 47 1709 490 1140 1081 638 902 932 1289 371 1705 1514 1753 645 432 564 41 944 782 143 303 342 1256 815 1282 219 1737 1786 1103 1866 911 1949 1893 622 1308 1094 568 1226 1846 392 1921 898 1799 106 1692 1088 1645 1896 1960 928 1323 1072 427 516 55 775 780 912 1706 674 1911 1647 883 829 1053 796 1140 215 577 1866 1427 1316 1675 45 27 74 1673 319 504 1540 825 1692 1263 338 1297 198 35 87 1080 1505 529 1898 122 968 1765 294 1719 1030 419 1753 1012 1854 1103 1896 424 436 1477 986 577 850 754 1961 189 1044 1048 1924 1729 108 1406 1456 1590 1534 910 578 470 1541 214 1590 1987 1165 920 1996 1505 1783 1417 1893 1703 888 581 874 1891 1193 458 1110 147 441 1304 1271 1132 1894 888 1761 406 840 546 1211 29 967 1429 1263 1938 271 531 1854 1753 1267 1202 138 217 71 1644 315 1935 101 1167 939 538 649 814 1578 1504 405 1983 1610 1608 382 1067 355 127 109 818 1585 1571 1182 36 1825 1866 1668 488 776 796 899 473 1356 1909 53 740 648 1589 774 1995 1644 815 1784 1669 1707 301 1632 1115 876 1770 1831 1597 202 599 1881 939 932 1191 345 1853 1293 274 332 892 1805 1174 1641 38 830 33 832 1550 784 1768 224 1129 1541 1764 1758 1346 501 1120 133 1398 1036 1004 1681 585 1367 1869 1795 1136 683 1770 80 277 1518 193 546 407 1036 944 933 150 1379 1916 1307 1387 1255 1389 873 1838 1471 1616 1320 1790 1462 676 340 29 523 1917 1488 577 1473 629 449 133 576 182 446 1349 1442 81 1735 966 39 426 1483 1803 1665 1417 656 513 153 842 1406 1092 472 1326 420 24 751 1576 466 1185 1743 1985 622 843 674 1253 1231 1443 336 1844 453 827 411 193 1039 730 116 326 1939 266 1075 399 1610 1513 579 74 1712 1944 323 973 888 1103 1862 1280 759 279 1956 31 805 718 1447 1817 927 39 1215 580 1943 1591 1582 1798 978 585 1277 1965 633 1499 357 633 1977 703 423 557 803 619 949 1025 172 553 1270 483 1902 856 966 1937 86 1193 419 1936 260 354 273 1465 1438 927 727 102 205 60 1312 9 1933 508 1963 934 1906 1605 1628 517 1902 1266 569 961 60 864 1373 1211 968 129 136 791 20 892 1948 829 1253'
test = '7 6 18'
# test = '3'
test = list(map(int,test.split()))
test = list(sorted(map(lambda x: x%3,test)))
print(test)
val = abs(sum(test[0::2]) - sum(test[1::2]))
print(val)
'''
'''
grades = list(map(int,'76 67 38 33'.split()))
for i in range(len(grades)):
    if grades[i]>=38:
        if (5-grades[i]%5)<3:
            grades[i]+=(5-grades[i]%5)
        
# new = [int((2*i - (2*i%10))/2 +5) for i in grades if (int((2*i - (2*i%10))/2 +5)-i)<3]
# print(new)
print(grades)
'''

# data = '3 4 21 36 10 28 35 5 24 42'
# n = 10
# scores = list(map(int,data.split()))
# hs,ls = scores[0],scores[0]
# ma,mi=0,0
# for i in scores:
#     if hs<i:
#         hs=i
#         ma+=1
#     if ls>i:
#         ls=i
#         mi+=1
# print(hs,ls)
# print(ma,mi)

# from collections import Counter
# c = Counter(list(map(int,'1 4 4 4 5 3'.split())))
# print(sorted([(k,v) for k,v in c.items()],key = lambda x: c[x]))
# print(c[max([v for k,v in c.items()])])

# from collections import Counter
# c = Counter(list(map(int,input().split())))
# print(c[max([v for k,v in c.items()])])